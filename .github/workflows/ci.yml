name: CourseWork_9

on: [push]

jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: "3.12"
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8
#      - name: Run Flake8
#        run: flake8 .
#
#  test:
#    needs: lint
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.12.3'
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run tests
#        run: |
#          export SECRET_KEY="${{ secrets.SECRET_KEY }}"
#          python manage.py test

  build:
#    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }} .

      - name: Push Docker image in Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }}


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Join to server
        run: |
          ssh -v -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd ~
          git clone git@github.com:Vitaliy-Avdoshkin/CourseWork_8.git
          cd CourseWork_8
          git switch feature/cw_9 && \
          docker system prune -af 
          docker volume prune -f 
          docker-compose up -d --build
          EOF
