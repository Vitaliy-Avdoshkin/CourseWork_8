name: CourseWork_91

on: [push]

jobs:
#  test:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Check out code
#      uses: actions/checkout@v3
#
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: '3.12'
#
#    - name: Cache pip
#      uses: actions/cache@v3
#      with:
#        path: ~/.cache/pip
#        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#        restore-keys: |
#          ${{ runner.os }}-pip-
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#
#    - name: Set up PostgreSQL
#      run: |
#        sudo apt-get update
#        sudo apt-get install -y postgresql-client
#        sudo service postgresql start
#        sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'rest_user_password';"
#        sudo -u postgres psql -c "CREATE DATABASE restdatabase;"
#        sudo -u postgres psql -c "CREATE ROLE runner WITH LOGIN PASSWORD 'rest_user_password';"
#        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE restdatabase TO runner;"
#        sudo -u postgres psql -c "GRANT CREATE ON SCHEMA public TO runner;"
#        echo "DATABASE_URL=postgres://runner:rest_user_password@localhost/restdatabase" >> $GITHUB_ENV
#
#    - name: Run migrate
#      run: |
#        export SECRET_KEY="${{ secrets.SECRET_KEY }}"
#        python manage.py migrate
#
#    - name: Run tests
#      run: |
#        export SECRET_KEY="${{ secrets.SECRET_KEY }}"
#        python manage.py test

  deploy:
    runs-on: ubuntu-latest
#    needs: test

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Join to server
        run: |
          ssh -v -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd ~
          rm -rf CourseWork_8
          git clone git@github.com:Vitaliy-Avdoshkin/CourseWork_8.git
#          cd CourseWork_8
#          git switch feature/cw_9 && \
#          python3 -m venv venv && \
#          source venv/bin/activate && \
#          git pull && \
#          pip install -r requirements.txt && \
#          sudo systemctl restart nginx
#          EOF
