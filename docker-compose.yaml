#version: "3"

services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  app:
    build: .
    tty: true
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
#    depends_on:
#      db:
#        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

  db:
    image: postgres:16
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $USER -d $NAME"]
      interval: 30s
      retries: 5
      timeout: 10s


  celery:
    build: .
    tty: true
    command: celery -A config
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env